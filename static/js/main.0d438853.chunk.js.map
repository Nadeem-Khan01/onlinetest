{"version":3,"sources":["Base.jsx","Qus1.jsx","Qus2.jsx","Qus0.jsx","End.jsx","App.jsx","index.js"],"names":["Qus3","type","name","value","to","style","textAlign","marginTop","backgroundColor","padding","border","borderRadius","fontWeight","fontSize","className","Base","useState","time","setTime","count","setCount","swt","setSwt","conf","setConf","test","setTest","buttonRef","useRef","myinter","setInterval","Date","toLocaleTimeString","i","startf","countu","alert","clearInterval","document","getElementById","click","ref","onClick","current","disabled","width","margin","exact","id","display","Qus1","Qus2","Qus0","End","App","path","component","ReactDom","render"],"mappings":"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","file":"static/js/main.0d438853.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./index.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Base = () => {\r\n\r\n  const [time, setTime] = useState();\r\n  const [count, setCount] = useState(\"(not started yet)\");\r\n  const [swt, setSwt] = useState(1);\r\n  const [conf, setConf] = useState();\r\n  const [test, setTest] = useState(false);\r\n  const buttonRef = useRef();\r\n  var myinter = \"\"\r\n  const update = () => {\r\n    setTime(new Date().toLocaleTimeString())\r\n  }\r\n  setInterval(update, 1000)\r\n  var i = 0;\r\n  const startf = () => {\r\n\r\n    var countu = 10 - i\r\n    if (countu > 0) {\r\n      setCount(countu)\r\n      i = i + 1\r\n    } else {\r\n      alert(\"your exam time is end\")\r\n      clearInterval(myinter);\r\n      setTest(true)\r\n      setConf(\"Your test hase been ended......and also auto submitted!!!\")\r\n      document.getElementById('btnclick').click();\r\n      \r\n\r\n    }\r\n  }\r\n\r\n  const start = () => {\r\n    if (swt <= 1) {\r\n      buttonRef.current.disabled = true;\r\n      setSwt(swt + 2)\r\n      myinter = setInterval(startf, 1000)\r\n      setConf(\"Your test hase been started......\")\r\n   \r\n     \r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n     \r\n\r\n      <h3 className=\"Toptime\">Current Time:{time}</h3>\r\n      <h3 className=\"Topcount\">Counter:You have total 10min where {count} is remaining.....</h3>\r\n      <h3>{conf}</h3>\r\n      <div className=\"start\">\r\n        <NavLink to={\"/qus1\"}>\r\n            <button\r\n          style={{ textAlign: \"center\", marginTop: \"30px\", backgroundColor: \"green\", padding: \"5px 15px 5px 15px\", border: \"none\", borderRadius: \"4px\", fontWeight: \"6\", fontSize: \"19px\" }}\r\n          className=\"btn btn-primary mt-2\"\r\n          ref={buttonRef}\r\n          onClick={start}\r\n        > Start Test</button>\r\n      </NavLink>\r\n\r\n      </div>\r\n      <hr style={{ width: \"90%\", margin: \"auto\" }} />\r\n      {\r\n          test?\r\n          <NavLink exact to={\"/end\"} ><button id=\"btnclick\" style={{display: \"none\"}}>click</button></NavLink>:\r\n          null\r\n      }\r\n     </>\r\n       )\r\n} \r\n\r\nconst Qus3= ()=>{\r\n  return(\r\n      <>\r\n     <h1>this is question 3</h1>\r\n     <p>1. The word which means \"house\" is:</p><br />\r\n         <input type=\"radio\" name=\"1.The word which means house is\" value=\"maison\" />maison <br />\r\n         <input type=\"radio\" name=\"1.The word which means house is\" value=\"quatre\" />quatre<br/>\r\n         <input type=\"radio\" name=\"1.The word which means house is\" value=\"soleil\" />soleil<br />\r\n         <input type=\"radio\" name=\"1.The word which means house is\" value=\"poisson\" />poisson<br />\r\n     <NavLink to={\"/end\"}>\r\n         <button\r\n       style={{ textAlign: \"center\", marginTop: \"30px\", backgroundColor: \"green\", padding: \"5px 15px 5px 15px\", border: \"none\", borderRadius: \"4px\", fontWeight: \"6\", fontSize: \"19px\" }}\r\n       className=\"btn btn-primary mt-2\"\r\n      \r\n     >Submit</button>\r\n   </NavLink>\r\n   </>\r\n  )\r\n}\r\n  \r\nexport default Base;\r\nexport {Qus3};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n const Qus1= ()=>{\r\n     return(\r\n         <>\r\n        <h1>this is question 1</h1>\r\n        <p>1. The word which means \"house\" is:</p><br />\r\n            <input type=\"radio\" name=\"1.The word which means house is\" value=\"maison\" />maison <br />\r\n            <input type=\"radio\" name=\"1.The word which means house is\" value=\"quatre\" />quatre<br/>\r\n            <input type=\"radio\" name=\"1.The word which means house is\" value=\"soleil\" />soleil<br />\r\n            <input type=\"radio\" name=\"1.The word which means house is\" value=\"poisson\" />poisson<br />\r\n        <NavLink to={\"/qus2\"}>\r\n            <button\r\n          style={{ textAlign: \"center\", marginTop: \"30px\", backgroundColor: \"green\", padding: \"5px 15px 5px 15px\", border: \"none\", borderRadius: \"4px\", fontWeight: \"6\", fontSize: \"19px\" }}\r\n          className=\"btn btn-primary mt-2\"  \r\n        > Next</button>\r\n      </NavLink>\r\n        </>\r\n        )\r\n } \r\n export default Qus1;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n const Qus2 = ()=>{\r\n     return(\r\n         <>\r\n        <h1>this is question 2</h1>\r\n        <p>1. The word which means \"house\" is:</p><br />\r\n            <input type=\"radio\" name=\"1.The word which means house is\" value=\"maison\" />maison <br />\r\n            <input type=\"radio\" name=\"1.The word which means house is\" value=\"quatre\" />quatre<br/>\r\n            <input type=\"radio\" name=\"1.The word which means house is\" value=\"soleil\" />soleil<br />\r\n            <input type=\"radio\" name=\"1.The word which means house is\" value=\"poisson\" />poisson<br />\r\n              \r\n        <NavLink to={\"/qus3\"}>\r\n            <button\r\n          style={{ textAlign: \"center\", marginTop: \"30px\", backgroundColor: \"green\", padding: \"5px 15px 5px 15px\", border: \"none\", borderRadius: \"4px\", fontWeight: \"6\", fontSize: \"19px\" }}\r\n          className=\"btn btn-primary mt-2\"\r\n         \r\n\r\n        > Next</button>\r\n      </NavLink>\r\n      </>\r\n        )\r\n } \r\n export default Qus2;","import React from 'react';\r\n const Qus0 = ()=>{\r\n     return(\r\n        <h1>Click on start Test for starting the test!!!</h1>\r\n        )\r\n } \r\n export default Qus0;","import React from 'react';\r\n const End= ()=>{\r\n     return(\r\n        <h1>Your test is completed</h1>\r\n        )\r\n } \r\n export default End;","import React from \"react\";\r\nimport \"./index.css\";\r\nimport Base from \"./Base.jsx\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport Qus1 from \"./Qus1.jsx\";\r\nimport Qus2 from \"./Qus2.jsx\";\r\nimport Qus0 from \"./Qus0.jsx\";\r\nimport End from \"./End.jsx\";\r\nimport {Qus3} from \"./Base\";\r\nimport \"./index.css\";\r\n\r\n\r\n\r\nconst App = () => {\r\n    return( \r\n        <>\r\n    <Base />\r\n    <Switch>\r\n        \r\n        <Route exact path=\"/qus1\" component={Qus1} />\r\n        <Route exact path=\"/\" component={Qus0} />\r\n        <Route exact path=\"/qus2\" component={Qus2} />\r\n        <Route exact path=\"/qus3\" component={Qus3} />\r\n        <Route exact path=\"/end\" component={End} />\r\n    </Switch>\r\n    </>\r\n    )\r\n}\r\nexport default App;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App.jsx\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDom.render(\n  <BrowserRouter>\n    <App />\n   </BrowserRouter>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}